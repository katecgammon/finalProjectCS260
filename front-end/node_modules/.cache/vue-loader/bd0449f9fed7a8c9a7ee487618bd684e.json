{"remainingRequest":"/home/kate/finalProjectCS260/front-end/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/kate/finalProjectCS260/front-end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/kate/finalProjectCS260/front-end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/kate/finalProjectCS260/front-end/src/views/Admin.vue?vue&type=template&id=54c38a05&scoped=true&","dependencies":[{"path":"/home/kate/finalProjectCS260/front-end/src/views/Admin.vue","mtime":1648943060041},{"path":"/home/kate/finalProjectCS260/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1648845214799},{"path":"/home/kate/finalProjectCS260/front-end/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1648845228291},{"path":"/home/kate/finalProjectCS260/front-end/node_modules/cache-loader/dist/cjs.js","mtime":1648845214799},{"path":"/home/kate/finalProjectCS260/front-end/node_modules/vue-loader/lib/index.js","mtime":1648845225791}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}